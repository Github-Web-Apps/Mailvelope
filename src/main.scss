// fonts
@import "./res/styles/fonts";

// icons
@import "./res/styles/icons";

// Required (functions, vars, mixins)
@import "./res/styles/_required";

// override mixins
@import "./res/styles/_mixins";

// Optional
@import "../node_modules/bootstrap/scss/root";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/code";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/tables";
@import "../node_modules/bootstrap/scss/forms";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/transitions";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/input-group";
@import "../node_modules/bootstrap/scss/custom-forms";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/card";
@import "../node_modules/bootstrap/scss/breadcrumb";
// @import "../node_modules/bootstrap/scss/pagination";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/jumbotron";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/progress";
// @import "../node_modules/bootstrap/scss/media";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/close";
// @import "../node_modules/bootstrap/scss/toasts";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
// @import "../node_modules/bootstrap/scss/popover";
// @import "../node_modules/bootstrap/scss/carousel";
// @import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/print";

// Custom imports
@import "./res/styles/_custom";
@import "./components/util/Spinner";

// custom classes
strong {
  font-size: 1rem;
  font-weight: bold;  
}

.card-clean {
  border: 0;
  .card-header {
    padding-left: 0.5rem;
    padding-right: 0;
    background-color: transparent;
  }
  .card-body {
    padding: 1.25rem 0.5rem;
  }
}

.card-clean-table {
  @extend .card-clean;
  .card-header {
    border-bottom: 0;
  }
}

.table-custom {
  border-bottom: $table-border-width solid $table-border-color;
  th {
    border: 0 !important;
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;
    font-weight: 400;
    background-color: $gray-200;
    color: $gray-900;
    &:first-child {
      border-top-left-radius: $border-radius-sm;
      border-bottom-left-radius: $border-radius-sm;
    }
    &:last-child {
      border-top-right-radius: $border-radius-sm;
      border-bottom-right-radius: $border-radius-sm;
    }
  }
  tr:first-child {
    td {
      border-top: 0;
    }
  }
}

// BS class overrides

// navbar
nav {
  font-family: $headings-font-family;
  font-size: 1rem;

  &.navbar > .container  {
    .navbar-brand {
      margin-right: 2rem;
    }

    .nav-item {
      .nav-link {
        font-weight: 400;
      }
    }

    &:first-child .nav-item {
      position: relative;
      &::after {
        content:' ';
        position: absolute;
        top: 92%;
        left: 50%;
        width: 60%;
        height: 1px;
        background-color: transparent;
        transform:translateX(-50%);
      }
      &:hover::after {
        background-color: $black;
        width: 40%;
      }
      &.active::after {
        background-color: theme-color("primary");
        width: 60%;
      }
    }
  }
}

// nav-pills
.nav-pills {
  font-family: $headings-font-family;
  font-size: 1rem;

  .nav-link {
    font-weight: 500;      
    line-height: 1;
    padding: 0.6875rem 0.625rem;
    font-size: inherit;
    color: $yiq-text-dark;
    @include border-radius($nav-pills-border-radius);
  }

  .nav-link:not(:last-child),
  .show > .nav-link:not(:last-child) {
    margin-bottom: 0.25rem;
  }

  .nav-link:not(.active):hover,
  .show > .nav-link:not(.active):hover {
    background-color: $gray-500;
  }
}



// breadcrump-item

.breadcrumb {
  margin-left: -0.5rem;
  margin-bottom: 0.5rem;

  .breadcrumb-item {  
    & > a {
      line-height: 1;
      font-weight: 500;
      font-size: 0.75rem;
      text-decoration: none;
      color: theme-color("primary");
      padding: 0.5rem 0.625rem;
      border-radius: $border-radius;
      background-color: transparent;

      &:hover {
        background-color: rgba(theme-color("primary"),0.1);
      }

      &:active {
        background-color: rgba(theme-color("primary"),0.2);
      }

      &.active {
        background-color: rgba(theme-color("primary"),0.1);
      }
    }
  }
}

.alert {
  display: inline-block;
  border-left-width: 0.25rem;
}


// alerts custom css 
@each $color, $value in $theme-colors {
  .alert-#{$color} {
    border-left-color: theme-color($color);
  }
}

// button custom css
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant-custom($color, $value);
  }
}


.input-group:not(.input-group-sm):not(.input-group-lg) > .input-group-prepend > .btn, 
.input-group:not(.input-group-sm):not(.input-group-lg) > .input-group-append > .btn {
  @include border-radius($btn-border-radius !important);
}

.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
  @include border-radius($btn-border-radius-sm !important);
}

.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
  @include border-radius($btn-border-radius-lg !important);
}


.input-group > .input-group-prepend > .btn:not(:last-child),
.input-group > .input-group-append > .btn:not(:last-child) {
  @include border-right-radius(0 !important);  
}

.input-group > .input-group-prepend > .btn:not(:first-child),
.input-group > .input-group-append > .btn:not(:first-child) {
  @include border-left-radius(0 !important);  
}

.input-group:not(.input-group-sm):not(.input-group-lg) > .form-control + .input-group-append > .btn:first-of-type {
  margin-left: -$btn-border-radius;
}

.input-group-sm > .form-control + .input-group-append > .btn:first-of-type {
  margin-left: -$btn-border-radius-sm;
}

.input-group-lg > .form-control + .input-group-append > .btn:first-of-type {
  margin-left: -$btn-border-radius-lg;
}

.input-group:not(.input-group-sm):not(.input-group-lg) > .input-group-prepend > .btn:last-of-type {
  margin-right: -$btn-border-radius;
}

.input-group-sm > .input-group-prepend > .btn:last-of-type {
  margin-right: -$btn-border-radius-sm;
}

.input-group-lg > .input-group-prepend > .btn:last-of-type {
  margin-right: -$btn-border-radius-lg;
}

// fix custom control
.custom-control-input {
  &:focus ~ .custom-control-label::before {
    @if $enable-shadows {
      box-shadow: $custom-control-indicator-focus-box-shadow, $input-focus-box-shadow !important;
    } @else {
      box-shadow: $input-focus-box-shadow !important;
    }
  }
  &:focus:not(:checked) ~ .custom-control-label::before {
    box-shadow: none !important;
  }
}

.custom-range {
  &:focus {
    border: 0 !important;
    // Pseudo-elements must be split across multiple rulesets to have an effect.
    // No box-shadow() mixin for focus accessibility.
    &::-webkit-slider-thumb { box-shadow: $custom-range-thumb-box-shadow, $custom-range-thumb-focus-box-shadow !important; }
    &::-moz-range-thumb     { box-shadow: $custom-range-thumb-box-shadow, $custom-range-thumb-focus-box-shadow !important; }
    &::-ms-thumb            { box-shadow: $custom-range-thumb-box-shadow, $custom-range-thumb-focus-box-shadow !important; }
  }

  &::-webkit-slider-thumb {
     &:active {
      border: 0 !important;
      box-shadow: $custom-range-thumb-focus-box-shadow !important;
      // @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-moz-range-thumb {
    &:active {
      border: 0 !important;
      box-shadow: $custom-range-thumb-focus-box-shadow !important;
      // @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-ms-thumb {
    &:active {
      border: 0 !important;
      box-shadow: $custom-range-thumb-focus-box-shadow !important;
      // @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &:disabled {
    &::-webkit-slider-thumb {
      border: 0 !important;
      // background-color: $custom-range-thumb-disabled-bg;
    }
    &::-moz-range-thumb {
      border: 0 !important;
      // background-color: $custom-range-thumb-disabled-bg;
    }
    &::-ms-thumb {
      border: 0 !important;
      // background-color: $custom-range-thumb-disabled-bg;
    }
  }
}


.custom-switch {
  padding-left: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {
    // background
    &::before {
      top: ($font-size-base * $line-height-base - $custom-switch-size) / 2;
      left: -($custom-switch-width + $custom-control-gutter);
      width: $custom-switch-width;
      height: $custom-switch-size;
      background-color: $custom-switch-track-bg;
      border: 1px solid $custom-control-indicator-border-color;
      pointer-events: all;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-border-radius;
      @include transition(transform .15s ease-in-out, $custom-forms-transition);      
    }

    &::after {
      // knob
      top: calc(#{(($font-size-base * $line-height-base - $custom-switch-size) / 2)} + #{$custom-control-indicator-border-width * 2}) !important;
      left: calc(#{-($custom-switch-width + $custom-control-gutter)} + #{$custom-control-indicator-border-width * 2}) !important;
      width: $custom-switch-indicator-size;
      height: $custom-switch-indicator-size;
      background-color: $custom-switch-indicator-bg !important;
      border: 1px solid $gray-700;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-size/2;
      @if $enable-shadows {
        box-shadow: inset 0 -1px 0px $gray-700;
      } @else {
        box-shadow: none;
      }

    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $custom-control-indicator-checked-bg !important;
      border: 1px solid $custom-control-indicator-checked-border-color;
      @if $enable-shadows {
        box-shadow: $custom-control-indicator-checked-box-shadow !important;
      } @else {
        box-shadow: none;
      }      
      transform: translateX($custom-switch-width - $custom-switch-size) !important;
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::before {
      background-color: rgba($custom-control-indicator-checked-bg, 0.1);
      border: 1px solid rgba($custom-control-indicator-checked-bg, 0.2);
      @if $enable-shadows {
        box-shadow: inset 0 -1px 0 rgba($custom-control-indicator-checked-bg, 0.125);
      } @else {
        box-shadow: none;
      }
    }
  }

  .custom-control-input:checked {
    &:focus ~ .custom-control-label::before {
      // the mixin is not used here to make sure there is feedback
      @if $enable-shadows {
        box-shadow: $input-focus-box-shadow !important;
      } @else {
        box-shadow: none;
      }
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}
